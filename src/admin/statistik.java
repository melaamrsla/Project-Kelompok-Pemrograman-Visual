package admin;
import java.sql.*;
import javax.swing.*;
import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import Koneksi.koneksi;
/**
 *
 * @author hp
 */
public class statistik extends javax.swing.JFrame {


    /**
     * Creates new form statistik
     */
    
    public statistik() {
        initComponents();
         panelPieChart.setPreferredSize(new java.awt.Dimension(600, 300));
    panelPieChart.setMinimumSize(new java.awt.Dimension(600, 300));
    tampilkanBarChart();
    tampilkanPieChart();
    }
private void tampilkanBarChart() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        try {
            Connection conn = new koneksi().connect();

            ResultSet rs1 = conn.createStatement().executeQuery("SELECT COUNT(*) AS total FROM peminjaman");
            if (rs1.next()) dataset.addValue(rs1.getInt("total"), "Jumlah", "Peminjaman");

            ResultSet rs2 = conn.createStatement().executeQuery("SELECT COUNT(*) AS total FROM pengembalian");
            if (rs2.next()) dataset.addValue(rs2.getInt("total"), "Jumlah", "Pengembalian");

            ResultSet rs3 = conn.createStatement().executeQuery("SELECT COUNT(*) AS total FROM denda");
            if (rs3.next()) dataset.addValue(rs3.getInt("total"), "Jumlah", "Denda");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal load Bar Chart: " + e);
        }

        JFreeChart barChart = ChartFactory.createBarChart(
            "Statistik Perpustakaan (Bar Chart)",
            "Kategori",
            "Jumlah",
            dataset,
            PlotOrientation.VERTICAL,
            true, true, false);

        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(panelBarChart.getSize());

        panelBarChart.removeAll();
        panelBarChart.add(chartPanel);
        panelBarChart.validate();
    }

    private void tampilkanPieChart() {
        DefaultPieDataset pieDataset = new DefaultPieDataset();

        try {
            Connection conn = new koneksi().connect();

            ResultSet rs1 = conn.createStatement().executeQuery("SELECT COUNT(*) AS total FROM peminjaman");
            if (rs1.next()) pieDataset.setValue("Peminjaman", rs1.getInt("total"));

            ResultSet rs2 = conn.createStatement().executeQuery("SELECT COUNT(*) AS total FROM pengembalian");
            if (rs2.next()) pieDataset.setValue("Pengembalian", rs2.getInt("total"));

            ResultSet rs3 = conn.createStatement().executeQuery("SELECT COUNT(*) AS total FROM denda");
            if (rs3.next()) pieDataset.setValue("Denda", rs3.getInt("total"));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal load Pie Chart: " + e);
        }

        JFreeChart pieChart = ChartFactory.createPieChart(
            "Statistik Perpustakaan (Pie Chart)",
            pieDataset,
            true, true, false);

        ChartPanel chartPanel = new ChartPanel(pieChart);
        chartPanel.setPreferredSize(panelPieChart.getSize());

        panelPieChart.removeAll();
        panelPieChart.add(chartPanel);
        panelPieChart.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBarChart = new javax.swing.JPanel();
        panelPieChart = new javax.swing.JPanel();
        bkembali = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBarChart.setMaximumSize(new java.awt.Dimension(600, 300));
        panelBarChart.setMinimumSize(new java.awt.Dimension(600, 300));
        panelBarChart.setPreferredSize(new java.awt.Dimension(600, 300));
        panelBarChart.setLayout(new java.awt.BorderLayout());

        panelPieChart.setMaximumSize(new java.awt.Dimension(600, 300));
        panelPieChart.setMinimumSize(new java.awt.Dimension(600, 300));
        panelPieChart.setPreferredSize(new java.awt.Dimension(600, 300));
        panelPieChart.setLayout(new java.awt.BorderLayout());

        bkembali.setBackground(new java.awt.Color(255, 153, 51));
        bkembali.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        bkembali.setForeground(new java.awt.Color(0, 0, 0));
        bkembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/arrow.png"))); // NOI18N
        bkembali.setText("BACK");
        bkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPieChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bkembali)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelPieChart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                    .addComponent(panelBarChart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bkembali)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkembaliActionPerformed
       new dashboard().setVisible(true); 
        this.dispose();
    }//GEN-LAST:event_bkembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(statistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(statistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(statistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(statistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new statistik().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bkembali;
    private javax.swing.JPanel panelBarChart;
    private javax.swing.JPanel panelPieChart;
    // End of variables declaration//GEN-END:variables
}
